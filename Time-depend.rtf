{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww14640\viewh12060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 setwd("/Users/moitrayeechatterjee/Documents/Research/Webspam detection using DST/Conference/Dempster-Shafer/Time Depend")\
webspam_dataset <- read.table(file = "WEBSPAM-UK2007-merged-raw-assessments.txt", header = TRUE, sep = " ", stringsAsFactors = FALSE)\
webspam_result <- read.table(file = "WEBSPAM-UK2007-merged-labels.txt", header = TRUE, sep = " ", stringsAsFactors = FALSE)\
require("dst")\
require("sqldf")\
resultlist <- list()\
exportresult <- c()\
webspam_dataset <- sqldf("select * from webspam_dataset where label !='-'")\
n <- c("nonspam","spam", "unknown", "borderline")\
uniqhost <- unique(unlist(webspam_dataset$host))\
for(i in uniqhost)\
\{	\
	xlist <- list()\
	xlist <- initsing(4,n)\
	rppml <- function(i)\
			\{\
				#xlist <- list()\
				uniqj <- unique(unlist(webspam_dataset$assessor [which(webspam_dataset$host == i)]))\
				for(j in uniqj) \
					\{\
					ma <- c ()\
					fx <- matrix(rbind(c(1,1,1,1)),ncol=4, byrow=TRUE)\
					subwebspam <- webspam_dataset[which(webspam_dataset$host == i & 								webspam_dataset$assessor ==j),]\
					host_label <- subwebspam$label[subwebspam$timestamp==max(subwebspam$timestamp)]\
					if ( host_label == 'nonspam')\
						\{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 					fx<- rbind(c(1,0,0,0),fx)\
#print(fx)\
						ma <- c(ma,1)\
#print(ma)\
						\}\
					if ( host_label == 'spam')\
						\{\
						fx <- rbind(c(0,1,0,0),fx)\
#print(fx)\
						ma <- c(ma,1)\
#print(ma)\
						\}\
					if ( host_label == 'unknown')										\{\
						fx <- rbind(c(0,0,1,0),fx)\
#print(fx)\
						ma<- c(ma,1)\
#print(ma)\
						\}			\
					if ( host_label == 'borderline')\
						\{\
						fx <- rbind(c(0,0,0,1),fx)\
#print(fx)\
						ma <- c(ma,1)\
#print(ma)\
						\}\
					ma <- c(ma,0)\
					x <- bca(ma,fx,n)\
		            		#xlist <- initsing(4,n)\
					xlist <-dsrwon(xlist, x)\
		          			names(xlist)[1] <- "DempsterRule"\
	           			\}\
				names(xlist)[1] <- "combination"\
				return (xlist)\
				\
			\}\
	temp<-rppml(i)\
	resultlist<-append(resultlist,temp)\
	resultlist<-append(resultlist, nzdsr(temp))\
	printresult <- nzdsr(temp)\
	aa <-which.max(printresult$DempsterRule[,1])\
	bb <- which(printresult$DempsterRule[aa,] == 1 & colnames(printresult$DempsterRule) != "mass" )\
	cc <- which.max(printresult$DempsterRule[,3])\
	if (is.finite(printresult$DempsterRule[cc,1]))\
		exportresult <- rbind(exportresult, cbind(unique(webspam_dataset$host[which(webspam_dataset$host == i)]),\
								webspam_result$labels[which(webspam_result$host == i)],\
								webspam_result$value[which(webspam_result$host == i)],\
								webspam_dataset$labels[which(webspam_dataset$host == i)], 								webspam_dataset$value[which(webspam_dataset$host == i)],\
 								colnames(printresult$DempsterRule)[bb], \
								printresult$DempsterRule[cc,1], 								printresult$con))\
	#colnames(exportresult) <- c("host","result_label","value","dst_result","dst_conflict")	resultlist<-append(resultlist, belplau(nzdsr(temp)$DempsterRule))\
	resultlist<-append(resultlist, tabresul(nzdsr(temp)))\
\}\
write.table(exportresult, file = "results_merged.csv", sep = "\\t", row.names = FALSE)\
\
\
\
}